// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMS.DAL;

#nullable disable

namespace SMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240406212307_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SMS.Models.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CourseCode = "112",
                            CourseName = "Maths",
                            EndDate = new DateTime(2023, 11, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2024, 3, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherName = "Jhon Smith"
                        },
                        new
                        {
                            Id = -2,
                            CourseCode = "362",
                            CourseName = "Physics",
                            EndDate = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2024, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherName = "Jake Mathews"
                        },
                        new
                        {
                            Id = -3,
                            CourseCode = "125",
                            CourseName = "Chemistry",
                            EndDate = new DateTime(2023, 10, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherName = "Jhon Smith"
                        },
                        new
                        {
                            Id = -4,
                            CourseCode = "322",
                            CourseName = "English",
                            EndDate = new DateTime(2023, 10, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherName = "Jauna Halls"
                        },
                        new
                        {
                            Id = -5,
                            CourseCode = "332",
                            CourseName = "Urdu",
                            EndDate = new DateTime(2023, 10, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2024, 3, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherName = "Abdul"
                        });
                });

            modelBuilder.Entity("SMS.Models.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Courses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Address1 = "i10/2, Islamabad",
                            Address2 = "i11/2, Islamabad",
                            Address3 = "i11/3, Islamabad",
                            Courses = "1,2,3",
                            DOB = new DateTime(2049, 9, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Jake",
                            Gender = "Male",
                            SurName = "Brown"
                        },
                        new
                        {
                            Id = -2,
                            Address1 = "f10/2, Islamabad",
                            Address2 = "f11/2, Islamabad",
                            Address3 = "f11/3, Islamabad",
                            Courses = "1,3",
                            DOB = new DateTime(2054, 8, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Jhon",
                            Gender = "Male",
                            SurName = "Snow"
                        },
                        new
                        {
                            Id = -3,
                            Address1 = "i10/2, Islamabad",
                            Address2 = "e11/2, Islamabad",
                            Address3 = "e11/3, Islamabad",
                            Courses = "1",
                            DOB = new DateTime(2034, 9, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Lisa",
                            Gender = "Male",
                            SurName = "Landry"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
